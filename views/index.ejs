<!DOCTYPE html>
  <html>
    <head>
      <meta charset="utf-8">
      <title><%= title %></title>
      <link rel='stylesheet' href='/stylesheets/style.css' />
      <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
      <link href="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.css" rel="stylesheet">
      <script src="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.js"></script>
      <script src='https://code.jquery.com/jquery-1.11.0.min.js'></script>
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
      <link href="public\stylesheets\PD.css">
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
      <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
      <style>

        body {
            margin: 0;
            padding: 0;
          }
          
        #map {
            position: absolute;
            top: auto;
            left: 0;
            right: 10%;
            width: 100%;
            height: 100%;
          }
          #markerReport {
              display: block;
              bottom: 5%;
              left: 30%;
              right: 0%;
              position:absolute;
              margin: 0px auto;
              width: 30%;
              height: 40px;
              padding: 10px;
              border: none;
              border-radius: 3px;
              font-size: 15px;
              text-align: center;
              color: #fff;
              background: #0ba310; 
            
              
              }
              #trashButton {
              display: block;
              bottom: 5%;
              left: 80%;
              right: 0%;
              position:absolute;
              margin: 0px auto;
              width: 10%;
              height: 40px;
              border: none;
              border-radius: 3px;
              font-size: 25px;
              text-align: center;
              color: #ececec;
              background: #0ba310; 
             
              }

      </style>

</head>
<body>
  <%- include('./partials/navbar.ejs', {signed_in: signed_in}) %>
    <div id="map"></div>
    <script>
      
        mapboxgl.accessToken = 'pk.eyJ1IjoiYmgzMDAiLCJhIjoiY2xlaWpsZW91MDI0dDQxbnI4aWNueTVneiJ9.u0cO3o-dzacQpUpt2rxLtA';

        // [refactor] this was the quickest/easiest way to implement getting the marker's details and sending them to the server, there may be alternative (better) approaches  
          let state = { newMarkerToAdd: null }
          const signed_in = <%= signed_in %>;  

          // be careful, as one of these are obtained from the server; potential [refactor]
            let is_staff = false; 
            <% if (is_staff) { %>
                is_staff = true
            <% } %>
            console.log("This user is staff? ", is_staff)

        const map = new mapboxgl.Map({
            container: 'map', // container ID
            // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
            style: 'mapbox://styles/mapbox/outdoors-v12', // style URL
            center: [-4.25424,55.86279], // starting position
            zoom: 13 // starting zoom

        });
        map.addControl(new mapboxgl.FullscreenControl());
        map.addControl(new mapboxgl.NavigationControl());//add zoom controllers and rotation
        //*********************************  
        map.addControl(new mapboxgl.GeolocateControl({
            positionOptions: {
                enableHighAccuracy: true
            },
            // When active the map will receive updates to the device's location as it changes..
            trackUserLocation: true,
            // Draw an arrow next to the location dot to indicate which direction the device is heading.
            showUserHeading: true
        })
        );
          // [refactor/feature] maybe introduce a "your markers" list 
          let othersMarkers = []
          let markers = []

          function addMarkerToMapWithAppropriatePopup(marker) {
            let lng = marker.lng
            let lat = marker.lat
            let _marker = new mapboxgl.Marker({ scale: 2, color: "orange" }).setLngLat(new mapboxgl.LngLat(lng, lat))
            if (is_staff && signed_in) {
              _marker.setPopup(new mapboxgl.Popup().setHTML(
                '<form>' +
                '<div class="text-center">' +
                '<button type="submit" class="btn btn-success" button style="background-color:blue">Join Event</button>' +
                '<button type="cancel" class="btn btn-danger">Remove</button>' +
                '<button type="submit" id="add-marker" class="btn btn-success" >Clean</button>' +
                '</div>' +
                '</form>'
              ))
            } else if (signed_in) {
              _marker.setPopup(new mapboxgl.Popup().setHTML(
                '<form>' +
                '<div class="text-center">' +
                '<button type="submit" onclick="joinEvent()" class="btn btn-success" button style="background-color:blue">Join Event</button>' +
                '</div>' +
                '</form>'
              ))
            }
            _marker.addTo(map)
          }

          // [todo] fetch the markers which were added whilst the user was not looking at the map (e.g. on another page) 
          fetch("/markers") // make a request to the server 
            .then((response) => response.json())
            .then((data) => {
              console.log(data)
              // we got the markers, now time to display 
              let markers = data
              markers.map(marker => {
                addMarkerToMapWithAppropriatePopup(marker)
              });
            })
            
          // [todo] I don't think this will get pre-existing markers so this will be for markers added when the user is looking at the map 
          let eventSource = new EventSource("/users/events/");

          eventSource.onmessage = event => { // [todo] distinguish the users' already added markers from other users' markers 
            const marker = JSON.parse(event.data).marker
            addMarkerToMapWithAppropriatePopup(marker)
          };
          //click on the map, then click on the "Add new Marker" to add new marker       
          map.on('click', e => {
            // [refactor] (quick fix) I think we should be using layers (a special MapboxGL concept)  
            if (e.originalEvent.target.parentNode.parentNode.classList.contains("mapboxgl-marker") || !signed_in) {
              alert("Please sign in");
              return; 
            } 

          const coordinates = e.lngLat;
              // [refactor] there's likely a better way to organize this but this will do for now 
            let _marker = new mapboxgl.Marker({ scale: 2}).setLngLat(coordinates)
            state.newMarkerToAdd = { lng: coordinates.lng, lat: coordinates.lat }
            markers.push(new mapboxgl.Marker({scale: 2 /* was hoping this reduced the "accidental marker add on marker click" */})
            // how secure is setHTML? 
                .setLngLat(coordinates).setPopup(new mapboxgl.Popup().setHTML(
                         '<div class="mb-3 mt-3">'+
                            '<label for="firstname" class="form-label">Title:</label>'+
                            '<input type="text" class="form-control" id="title" placeholder="Enter Title" name="title" required>'+
                          '</div>'+

                          '<div class="mb-3 mt-3">'+
                          '<label for="firstname" class="form-label">Comment:</label>'+
                          '<input class="form-control" id="comment" placeholder="Enter Comment" name="text" required>'+
                          '</div>'+

                          '<div class="mb-3 mt-3">' +
                          '<label for="firstname" class="form-label">Number of people needed:</label>' +
                          '<input type="number" class="form-control" id="peopleN" placeholder="Enter Number" name="peopleN" required>'+
                          '</div>'+
                          '<div class="mb-3 mt-3">'+
                          '<div class="mb-3">'+
                            '<label for="uploadImage" class="form-label">Add image:</label>'+
                            '<label for="formFileSm" class="form-label"></label>'+
                            '<input class="form-control" id="formFileMd" type="file">'+                                           
                          '</div>'+

                          '<div class="mb-3 mt-3">'+
                          '<label for="firstname" class="form-label">Amount Of Garbage:</label>'+
                          '<br>'+
                          '<div class="form-check form-check-inline">'+
                            '<input  class="form-check-input" type="radio" id="inlineCheckbox1" name="optradio" value="option1">'+
                            '<label class="form-check-label" for="inlineCheckbox1">Small</label>'+
                          '</div>'+
                          '<div class="form-check form-check-inline">'+
                            '<input  class="form-check-input" type="radio" id="inlineCheckbox2" name="optradio" value="option2">'+
                            '<label class="form-check-label" for="inlineCheckbox2">Medium</label>'+
                            '</div>'+
                            '<div class="form-check form-check-inline">'+
                              '<input class="form-check-input" type="radio" id="inlineCheckbox3" name="optradio" value="option3">'+
                              '<label class="form-check-label" for="inlineCheckbox3">Large</label>'+
                              '</div>'+
                              '</div>'+
                              
                              
                              '<div class="text-center">'+
                                '<button type="cancel" class="btn btn-danger" onclick="removeMarker()">Cancel</button>'+
                                '<button type="submit" id="add-marker" onClick="addMarker()" class="btn btn-success" >Submit</button>'+
                                '</div>'+
                                
                                '</form>'+
                                '</div>'
                                )
                                )
                .addTo(map));
        });
        
        function removeMarker()
        {
          // remove all markers added by user 
          markers.forEach((marker) => marker.remove());  
        };
        
        let userId = -1; 
        <% if (user_id && user_id != -1) { %>
          userId = "<%= user_id %>";
        <% } %>
        function addMarker() { // [refactor] there may be a proper way of attaching event listeners to the popup but this was the quickest/easiest way 
          // [todo] use a similar (or better) approach to get the event details e.g. name of event 
          const { lat, lng } = state.newMarkerToAdd
          const data = { userId, lat, lng }
          fetch("users/add-marker", {
               method: "POST", // or 'PUT'
               headers: {
                 "Content-Type": "application/json",
               },
               body: JSON.stringify(data),
             })
               .then((response) => response.json())
               .then((data) => {
                 console.log("Success:", data);
                 alert("Your marker has been added")
               })
               .catch((error) => {
                 console.error("Error:", error);
               });
               //remove all unsubmitted markers
               markers.forEach((marker) => marker.remove());  
           }

          function joinEvent() {
            // [todo] implement communication with server etc 
            if (!signed_in) {
              alert("Please sign into join events")
            }
          }

    </script>
  </body>
</html>
